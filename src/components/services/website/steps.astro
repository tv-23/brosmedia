---
import "../../../styles/sections/steps.css";
---

<section id="success-keys" class="keys section">
    <div style="position: relative;">
        <div class="design-container" id="designContainer" style=""></div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const container = document.getElementById("designContainer");

        const pointsDesktop = [
            { x: 0, y: 40 },
            { x: 10, y: 45 },
            { x: 25, y: 63 },
            { x: 45, y: 85 },
            { x: 65, y: 50 },
            { x: 75, y: 70 },
            { x: 105, y: 85 },
        ];

        const pointsMobileTablet = [
            { x: 0, y: 35 },
            { x: 15, y: 45 },
            { x: 50, y: 62 },
            { x: 15, y: 77 },
            { x: 50, y: 92 },
            { x: 15, y: 107 },
            { x: 0, y: 95 },    
        ];

        let points;
        let left_val = 8 

        if (window.innerWidth >= 1024) {
            points = pointsDesktop;
        } else {
            points = pointsMobileTablet;
            left_val  = 12
        }

        const pointEls = [];
        const stepTextEls = [];
        const lineEls = [];
        const lineData = [];

        for (let i = 1; i < points.length - 1; i++) {
            const stepText = document.createElement("span");
            console.log(left_val)
            stepText.style.left = `${points[i].x + left_val}%`;
            stepText.style.top = `${points[i].y - 3}%`;
            stepText.style.position = `absolute`;
            stepText.className = "span-text";

            const el = document.createElement("div");
            el.className = "point";
            el.style.left = `${points[i].x}%`;
            el.style.top = `${points[i].y}%`;

            const label = document.createElement("span");

            let stepName;
            switch (i) {
                case 1:
                    stepName = "01";
                    stepText.textContent = "Analyse de vos besoins";
                    break;

                case 2:
                    stepName = "02";
                    stepText.textContent = "Design & architecture";
                    break;

                case 3:
                    stepName = "03";
                    stepText.textContent = "Développement et intégration";
                    break;

                case 4:
                    stepName = "04";
                    stepText.textContent = "Mise en ligne et formation";
                    break;

                default:
                    stepName = "05";
                    stepText.textContent = "Suivi et maintenance";
                    break;
            }

            label.textContent = stepName;
            el.appendChild(label);

            container.appendChild(stepText);

            container.appendChild(el);
            pointEls.push(el);
            stepTextEls.push(stepText);
        }

        for (let i = 0; i < points.length - 1; i++) {
            const line = document.createElement("div");
            line.className = "line";
            line.id = `line-${i}`
            container.appendChild(line);
            lineEls.push(line);
            lineData.push({ length: 0 });
        }

        function updateLines() {
            const clesSection = document.getElementById("success-keys");
            const sectionTop = clesSection.offsetTop - 150;
            const sectionHeight = clesSection.offsetHeight;

            const scrollY =
                window.scrollY || document.documentElement.scrollTop;
            const scrollInSection = (scrollY - sectionTop) * 3;
            const progress = Math.min(
                Math.max(scrollInSection / sectionHeight, 0),
                1,
            );
            console.log(scrollY);
            if (scrollY >= 800) {
                const containerW = container.clientWidth;
                const containerH = container.clientHeight;
                const maxSegments = lineEls.length;
                const maxVisible = maxSegments * progress;

                let drawnPixels = 0;

                for (let i = 0; i < lineEls.length; i++) {
                    const line = lineEls[i];
                    const p1 = {
                        x: (points[i].x / 100) * containerW,
                        y: (points[i].y / 100) * containerH,
                    };
                    const p2 = {
                        x: (points[i + 1].x / 100) * containerW,
                        y: (points[i + 1].y / 100) * containerH,
                    };

                    const dx = p2.x - p1.x;
                    const dy = p2.y - p1.y;
                    const angle = (Math.atan2(dy, dx) * 180) / Math.PI;
                    const length = Math.sqrt(dx * dx + dy * dy);
                    lineData[i].length = length;

                    const segmentProgress = Math.min(
                        Math.max(maxVisible - i, 0),
                        1,
                    );
                    const drawnLength = segmentProgress * length;

                    line.style.left = `${p1.x}px`;
                    line.style.top = `${p1.y}px`;
                    line.style.transform = `rotate(${angle}deg)`;
                    line.style.width = `${drawnLength}px`;

                    drawnPixels += drawnLength;

                    if (i > 0 && i < points.length - 1) {
                        const cube = pointEls[i - 1];
                        const spanText = stepTextEls[i - 1];

                        let requiredPixels = 0;
                        for (let j = 0; j < i; j++) {
                            requiredPixels += lineData[j].length;
                        }

                        const reachThreshold = 10;
                        if (drawnPixels >= requiredPixels - reachThreshold) {
                            cube.classList.add("active");
                            spanText.classList.add("active");
                        } else {
                            cube.classList.remove("active");
                            spanText.classList.remove("active");
                        }
                    }
                }
            }
        }

        window.addEventListener("scroll", updateLines);
        window.addEventListener("resize", updateLines);
        updateLines();
    });
</script>
