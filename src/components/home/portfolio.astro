---
const portfolio = [
    {
        img: "/our-references/inadworld.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Inad World",
        url: "https://inadworld.com",
    },
    {
        img: "/our-references/moulaybousselhamimmobilier.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "MoulayBousselham Immobilier",
        url: "https://moulaybousselhamimmobilier.com",
    },
    {
        img: "/our-references/drhachimiyassmine.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "DR HACHIMI yassmine",
        url: "https://drhachimiyassmine.com/",
    },
     {
        img: "/our-references/esunivers.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Esunivers",
        url: "https://esunivers.com",
    },
    {
        img: "/our-references/probyu.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Probyu",
        url: "https://probyu.com/",
    },
    {
        img: "/our-references/wefruits.ma.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "WeFruits",
        url: "https://wefruits.ma",
    },
    {
        img: "/our-references/imagaleries.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "IMA Galeries",
        url: "https://imagaleries.com/",
    },
    {
        img: "/our-references/wecargo.ma.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "WeCargo",
        url: "https://wecargo.ma",
    },
    {
        img: "/our-references/uk-cafe.ma.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "UK cafe",
        url: "https://uk-cafe.ma",
    },
    {
        img: "/our-references/mye-fruits.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Mye Fruits",
        url: "https://mye-fruits.com",
    },
    {
        img: "/our-references/maison-dart.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Maison Dart",
        url: "https://maison-dart.com",
    },
    {
        img: "/our-references/location-elite.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Location Elite",
        url: "https://location-elite.com",
    },
    {
        img: "/our-references/hygienegos.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Hygienegos",
        url: "https://hygienegos.com",
    },
    {
        img: "/our-references/hipeca-exp.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Hipeca Export",
        url: "https://hipeca-exp.com",
    },
    {
        img: "/our-references/granderberry.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "GranderBerry",
        url: "https://granderberry.com",
    },
    {
        img: "/our-references/epowermotorsmaroc.com.webp",
        tag: "website",
        badge: "Conception de site web",
        title: "Epower Motors",
        url: "https://epowermotorsmaroc.com",
    },

     {
        img: "/our-references/auto-hamid.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title: "Auto hamid larache",
        url:  "https://www.facebook.com/reel/2615905811935303",
    },
    {
        img: "/our-references/baraka.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title: "Kasr al baraka",
        url:  "https://www.facebook.com/reel/483578264461115",
    },{
        img: "/our-references/uk-cafe.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title: "Uk cafe",
        url:  "https://www.facebook.com/reel/1659695201318779",
    },{
        img: "/our-references/grander-berry.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title: "Grander berry",
        url:  "https://www.youtube.com/watch?v=eiRaI1UxT58",
    },{
        img: "/our-references/moulay.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title:"Immobilier Moulay bousslham",
        url:  "https://www.youtube.com/watch?v=m5A1xviDP98",
    },{
        img: "/our-references/_green-land.webp",
        tag: "advideo",
        badge: "Vidéo publicitaire",
        title: "Green Land Larache",
        url:  "https://www.facebook.com/reel/1743155456206139",
    },
];
---



<section id="portfolio" class="portfolio section">
    <!-- Section Title -->
    <div class="container section-title">
        <h2>Portfolio</h2>
        <div>
            <span>Parmi nos références,</span>
            <span class="description-title" style="color:#e30f29"
                >des TPE, PME et Multinationales</span
            >
        </div>
    </div>
    <!-- End Section Title -->

    <div class="container-fluid" >
        <div
            class="isotope-layout"
            data-default-filter=".filter-website"
            data-layout="masonry"
            data-sort="original-order"
        >
            <ul class="portfolio-filters isotope-filters" >
               
                <li data-filter=".filter-website" class="filter-active">
                    <i class="bi bi-code-slash"></i> Conception de site web
                </li>
                <li data-filter=".filter-advertising">
                    <i class="bi bi-vector-pen"></i> Création publicitaire
                </li>
                <li data-filter=".filter-advideo">
                    <i class="bi bi-bar-chart-line"></i> Vidéo publicitaire
                </li>
                 <li data-filter="*" >
                    <i class="bi bi-grid-3x3"></i> Tous les projets
                </li>
            </ul>

            <div class="row g-4 isotope-container" >
                {portfolio.map((p) => (
                    <div
                      class={`col-xl-3 col-lg-4 col-md-6 col-6 portfolio-item isotope-item filter-${p.tag}`}
                    >
                      <article class="portfolio-entry">
                        <figure class="entry-image">
                          <div 
                            class="lazy-image" 
                            data-src={p.img} 
                            data-alt={p.title} 
                            data-width="100%" 
                            data-height="100%"
                          ></div>
                          <div class="entry-overlay">
                            <div class="overlay-content">
                              <div class="entry-meta badge bg-primary">{p.badge}</div>
                              <h3 class="entry-title">{p.title}</h3>
                              <div class="entry-links">
                                <a
                                  href={p.img}
                                  class="glightbox"
                                  data-gallery="portfolio-gallery-ui"
                                  data-glightbox={`title: ${p.title}; description: Praesent commodo cursus magna, vel scelerisque nisl consectetur.`}
                                >
                                  <i class="bi bi-arrows-angle-expand" />
                                </a>
                                <a href={p.url} target="_blank">
                                  <i class="bi bi-arrow-right" />
                                </a>
                              </div>
                            </div>
                          </div>
                        </figure>
                      </article>
                    </div>
                  ))}
                  

               
            </div>
            <!-- End Portfolio Container -->
        </div>
    </div>
</section>

<script type="module">
    // Config
    const PLACEHOLDER_SELECTOR = ".lazy-image";
    const SERVICES_ID = "services";
    const DEBUG = false; // set true during development
  
    const log = (...args) => { if (DEBUG) console.log("[portfolio-lazy]", ...args); };
  
    // Replace single placeholder with an <img>
    function replacePlaceholder(placeholder) {
      const src = placeholder.dataset.src;
      if (!src) return;
  
      const img = document.createElement("img");
      img.className = "img-fluid portfolio-img lazy-loaded";
      img.loading = "lazy";
      img.decoding = "async";
      img.alt = placeholder.dataset.alt || "";
      img.src = src;
      // Smooth fade-in
      img.style.opacity = "0";
      img.style.transition = "opacity 300ms ease";
  
      // Replace placeholder immediately so download starts right away
      placeholder.replaceWith(img);
  
      img.addEventListener("load", () => {
        img.style.opacity = "1";
      });
      img.addEventListener("error", () => {
        // optional: keep a small fallback style when load fails
        img.style.opacity = "1";
        img.style.filter = "grayscale(1)";
        log("image load error:", src);
      });
    }
  
    // Load ALL placeholders (skip those already replaced)
    function loadAllPortfolioImages() {
      const placeholders = document.querySelectorAll(PLACEHOLDER_SELECTOR);
      if (!placeholders.length) {
        log("no placeholders found");
        return;
      }
      log("loading", placeholders.length, "images");
      placeholders.forEach((ph) => {
        // If placeholder already removed, skip
        if (!ph || !ph.dataset) return;
        replacePlaceholder(ph);
      });
  
      // If you use GLightbox or similar, re-init it here.
      // (Optional) Re-init GLightbox if present:
      try {
        if (window.GLightbox) {
          // destroy previous instance if exists
          if (window._portfolioGLightbox && typeof window._portfolioGLightbox.destroy === "function") {
            window._portfolioGLightbox.destroy();
          }
          window._portfolioGLightbox = GLightbox({ selector: ".glightbox" });
        }
      } catch (e) {
        log("glightbox re-init error:", e);
      }
    }
  
    // Determine if #services is in view OR already passed (above the viewport)
    function servicesPassedOrVisible(servicesEl) {
      if (!servicesEl) return false;
      const rect = servicesEl.getBoundingClientRect();
      const vh = window.innerHeight || document.documentElement.clientHeight;
  
      // Condition TRUE when:
      // - services is partially/fully visible (rect.top < vh && rect.bottom >= 0)
      // - OR services has been scrolled past (rect.bottom <= 0)
      const visible = rect.top < vh && rect.bottom >= 0;
      const passed = rect.bottom <= 0;
      log("services rect:", rect, "visible:", visible, "passed:", passed);
      return visible || passed;
    }
  
    // Main bootstrap
    document.addEventListener("DOMContentLoaded", () => {
      // Defer to next frame so layout/scroll position is stable
      requestAnimationFrame(() => {
        const servicesEl = document.getElementById(SERVICES_ID);
        if (!servicesEl) {
          log(`#${SERVICES_ID} not found`);
          return;
        }
  
        // If on load the user has already passed the section (e.g. refresh on footer),
        // or the section is visible, load images immediately
        if (servicesPassedOrVisible(servicesEl)) {
          loadAllPortfolioImages();
          return;
        }
  
        // Otherwise, observe it: when it enters viewport OR becomes passed, load images.
        if ("IntersectionObserver" in window) {
          const observer = new IntersectionObserver((entries) => {
            for (const entry of entries) {
              // entry.isIntersecting covers entering viewport.
              // Also check entry.boundingClientRect.bottom <= 0 (scrolled past) just in case.
              if (entry.isIntersecting || entry.boundingClientRect.bottom <= 0) {
                loadAllPortfolioImages();
                observer.disconnect();
                break;
              }
            }
          }, {
            root: null,
            rootMargin: "0px",
            threshold: 0, // triggers as soon as anything intersects
          });
  
          observer.observe(servicesEl);
          log("observing #services");
        } else {
          // Fallback: listen for scroll and check
          const onScroll = () => {
            if (servicesPassedOrVisible(servicesEl)) {
              loadAllPortfolioImages();
              window.removeEventListener("scroll", onScroll);
            }
          };
            window.addEventListener("scroll", onScroll, { passive: true });
          log("attached scroll fallback");
        }
      });
    });
  </script>
  
  