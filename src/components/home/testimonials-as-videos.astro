---

---

<section id="testimonials-as-videos" class="videos section">
    <!-- Section Title -->
    <div class="container section-title">
        <h2>Avis</h2>
        <div>
            <span>Ils témoignent</span>
            <span class="description-title">de notre impact</span>
        </div>
    </div>
    <!-- End Section Title -->

    <div class="container">
        <div class="row align-items-center gy-4">
            <!-- Swiper -->
            <div class="col-lg-5">
                <div class="swiper video-swiper position-relative">
                    <div class="swiper-wrapper" id="videoSlider"></div>

                    <!-- Navigation -->
                    <div class="swiper-button-next"></div>
                    <div class="swiper-button-prev"></div>
                </div>
            </div>

            <!-- Text -->
            <div class="col-lg-7">
                <div class="videos-section-content">
                    <h2>L'impact de Brosmedia</h2>
                    <p class="lead">
                        Chez Brosmedia, chaque projet est une histoire de
                        transformation. Grâce à notre approche personnalisée et
                        humaine, nous aidons nos clients à franchir un cap dans
                        leur présence digitale. Que ce soit par la création de
                        sites web percutants, des campagnes marketing efficaces
                        ou des vidéos publicitaires engageantes, nous
                        contribuons concrètement à leur croissance.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const slidesData = [
        {url:'https://www.videoask.com/f02f0r1ef'},
        { url: 'https://www.videoask.com/fcstso7o3' },
        {url:'https://www.videoask.com/fujo8ptxi'},
    ];

    const sliderWrapper = document.getElementById('videoSlider');
    let swiper;

    function createSlide(videoUrl) {
        const slide = document.createElement('div');
        slide.className = 'swiper-slide rounded overflow-hidden';
        
        // Added title attribute and removed autoplay to prevent blocking
        slide.innerHTML = `
            <iframe 
                src="${videoUrl}?autoplay=0&embed=1&mute=0" 
                width="100%" 
                height="500" 
                allow="camera; microphone; autoplay; fullscreen; picture-in-picture" 
                style="border:none;" 
                allowfullscreen
                loading="lazy"
                title="Videoask Video Player">
            </iframe>
        `;
        return slide;
    }

    function pauseAllVideos() {
        // Pause all video iframes in the slider
        const iframes = sliderWrapper.querySelectorAll('iframe');
        iframes.forEach(iframe => {
            try {
                // Post pause message to each iframe
                iframe.contentWindow.postMessage('{"method":"pause"}', '*');
            } catch (e) {
                console.log('Could not pause video:', e);
            }
        });
    }

    function loadSlides() {
        // Clear existing slides
        sliderWrapper.innerHTML = '';
        
        slidesData.forEach(item => {
            sliderWrapper.appendChild(createSlide(item.url));
        });

        // Initialize or reinitialize Swiper
        if (swiper) {
            swiper.destroy(true, true);
        }
        
        swiper = new Swiper(".video-swiper", {
            loop: true,
            speed: 600,
            slidesPerView: 1,
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
            on: {
                // Pause videos when slide changes
                slideChange: function() {
                    pauseAllVideos();
                },
            },
            // autoplay: {
            //     delay: 6000,
            //     disableOnInteraction: false,
            // }
        });
    }

    // Use requestIdleCallback if available, otherwise use setTimeout
    if ('requestIdleCallback' in window) {
        requestIdleCallback(loadSlides, { timeout: 2000 });
    } else {
        setTimeout(loadSlides, 1000);
    }

});
</script>